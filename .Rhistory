library(nzffdr)
# compile help documents
devtools::build()
devtools::install()
devtools::document()
devtools::check()
# compile help documents
devtools::build()
devtools::install()
devtools::document()
# function help files
?import_nzffd()
?clean_nzffd()
?fill_nzffd()
?add_nzffd()
devtools::check()
devtools::check()
devtools::check()
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.path("~/")
getwd(file.path("~/"))
?file.path
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
devtools::check()
library(nzffdr)
devtools::document()
devtools::check()
dat <- import_nzffd(
catchment = "", river = "", location = "",
fish_method = "", species = "", starts = 2010, ends = 2019)
library(nzffdr)
dat <- import_nzffd(catchment = "", river = "", location = "",
fish_method = "", species = "", starts = 2005, ends = 2010)
dat2 <- clean_nzffd(dat) # if it workd a new variable "form" will be added (col 23)
dat3 <- clean_nzffd(dat2)
View(dat2)
dat3 <- fill_nzffd(dat2)
dat4 <- add_nzffd(dat3)
devtools::document()
install_github("flee598/nzffdr", auth_token = "a1f973f757053d5a01c7027a6c5313136fafab91")
library(devtools)
install_github("flee598/nzffdr", auth_token = "a1f973f757053d5a01c7027a6c5313136fafab91")
?clean_nzffd()
devtools::document()
install_github("flee598/nzffdr", auth_token = "a1f973f757053d5a01c7027a6c5313136fafab91")
?clean_nzffd()
# function help files
?import_nzffd()
?fill_nzffd()
?add_nzffd()
# data help file pages
?species_nzffd
version
remove.packages("nzffdr", lib="~/R/win-library/3.6")
library(devtools)
install_github("flee598/nzffdr", auth_token = "a1f973f757053d5a01c7027a6c5313136fafab91")
?download.file
install.packages("gtools")
library(tidyverse)
library(gtools)
dat <- read_rds("MergedTrtDataOut_0907.rds")
dat <- filter(dat, pDist == 0)
dat$ExtnctLoc <- dat$N == 0
DivAlph <- dat %>%
group_by(Reps, Nwrk, pDisp, site) %>%
summarise(Alph = sum(ExtnctLoc == FALSE)) %>%
group_by(Nwrk, pDisp, site) %>%
summarise(MedAlph = mean(Alph),
Alph05 = quantile(Alph, c(0.05)),
Alph95 = quantile(Alph, c(0.95)),
CVAlph = (sd(Alph) / mean(Alph)) * 100)
head(dat)
install.packages("devtools")
"ho there"
xx <- "ho there"
toupper(substr(xx, 1, 1)
)
substr(xx, 1, 1)
toupper(xx)
substr(x, 1, 1)
substr(xx, 1, 1)
mean
sd
sd("ht")
x <- "fff"
sqrt(var(if (is.vector(x) || is.factor(x)) x else as.double(x),
na.rm = na.rm))
as.double(x)
install.packages("rgdal")
library(nzffdr)
devtools::install_github("orb16/southernMaps")
devtools::install_github("orb16/southernMaps")
install.packages(c("boot", "digest", "DT", "foreign", "haven", "KernSmooth", "knitr", "mgcv", "nlme", "R6", "Rcpp", "rmarkdown", "roxygen2", "rvest", "scales", "selectr", "survival", "tidyverse", "xfun"))
devtools::install_github("orb16/southernMaps")
library(southernMaps) # NZ map that plays nice
install.packages("maptools")
# load required packages
library(devtools)
# devtools::install_github("orb16/southernMaps")
library(southernMaps) # NZ map that plays nice
library(tidyverse)    # data handling functions
library(sp)           # coordinate conversion
library(rgdal)        # coordinate conversion
library(nzffdr)
# import all records between 2000 and 2010
dat <- import_nzffd(catchment = "", river = "", location = "",
fish_method = "", species = "", starts = 2000, ends = 2010)
head(dat)
dat2 <- clean_nzffd(dat)
dat3 <- fill_nzffd(dat2, alt = TRUE, maps = TRUE)
dat4 <- add_nzffd(dat3)
# load required packages
library(devtools)
# devtools::install_github("orb16/southernMaps")
library(southernMaps) # NZ map that plays nice
library(tidyverse)    # data handling functions
library(sp)           # coordinate conversion
library(rgdal)        # coordinate conversion
library(nzffdr)
# transform the NZFFD coords (from NZMG to WGS84 lat/long)
dat_coord <- data.frame(x = dat4$east, y = dat4$north)
sp::coordinates(dat_coord) <- ~ x + y
proj4string <- "+proj=nzmg +lat_0=-41 +lon_0=173 +x_0=2510000 +y_0=6023150
+ellps=intl +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993
+nadgrids=nzgd2kgrid0005.gsb +no_defs" # NZMG49
sp::proj4string(dat_coord) <- sp::CRS(proj4string)
dat_coord <- sp::spTransform(dat_coord, sp::CRS("+init=epsg:4326")) #WGS84
dat_coord <- as.data.frame(dat_coord)
# reattch coords
dat4$wgs84_x <- dat_coord$x
dat4$wgs84_y <- dat_coord$y
# Subset Mudfish data ---------------------------------------------------------
mud <- c("Canterbury mudfish", "Burgundy mudfish",
"Brown mudfish", "Black mudfish")
fish_map <- dat4 %>%
filter(common_name %in% mud) %>%
filter(catch != "Chatham")
# Mapping ---------------------------------------------------------------------
# get a friendly NZ map
nzmap <- southernMaps::nzHigh
nzmap <- southernMaps::fortify_polygons(nzmap, proj = "wgs84")
install.packages("regos")
install.packages("rgeos")
# get a friendly NZ map
nzmap <- southernMaps::nzHigh
nzmap <- southernMaps::fortify_polygons(nzmap, proj = "wgs84")
install.packages("rgdal")
install.packages("rgdal")
# load required packages
library(devtools)
# devtools::install_github("orb16/southernMaps")
library(southernMaps) # NZ map that plays nice
library(tidyverse)    # data handling functions
library(sp)           # coordinate conversion
library(rgdal)        # coordinate conversion
library(nzffdr)
# transform the NZFFD coords (from NZMG to WGS84 lat/long)
dat_coord <- data.frame(x = dat4$east, y = dat4$north)
sp::coordinates(dat_coord) <- ~ x + y
proj4string <- "+proj=nzmg +lat_0=-41 +lon_0=173 +x_0=2510000 +y_0=6023150
+ellps=intl +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993
+nadgrids=nzgd2kgrid0005.gsb +no_defs" # NZMG49
sp::proj4string(dat_coord) <- sp::CRS(proj4string)
dat_coord <- sp::spTransform(dat_coord, sp::CRS("+init=epsg:4326")) #WGS84
dat_coord <- as.data.frame(dat_coord)
# reattch coords
dat4$wgs84_x <- dat_coord$x
dat4$wgs84_y <- dat_coord$y
# Subset Mudfish data ---------------------------------------------------------
mud <- c("Canterbury mudfish", "Burgundy mudfish",
"Brown mudfish", "Black mudfish")
fish_map <- dat4 %>%
filter(common_name %in% mud) %>%
filter(catch != "Chatham")
# Mapping ---------------------------------------------------------------------
# get a friendly NZ map
nzmap <- southernMaps::nzHigh
nzmap <- southernMaps::fortify_polygons(nzmap, proj = "wgs84")
# get a friendly NZ map
nzmap <- southernMaps::nzHigh
nzmap <- southernMaps::fortify_polygons(nzmap, proj = "wgs84")
# Plot all 4 species on one map
ggplot(nzmap, aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
coord_map() +
geom_point(data = fish_map, aes(x = wgs84_x, y = wgs84_y, colour = common_name)) +
theme_minimal() +
labs(color = "Species")
install.packages("mapproj")
# load required packages
library(devtools)
# devtools::install_github("orb16/southernMaps")
library(southernMaps) # NZ map that plays nice
library(tidyverse)    # data handling functions
library(sp)           # coordinate conversion
library(rgdal)        # coordinate conversion
library(nzffdr)
# Add WGS84 lat longs ---------------------------------------------------------
# transform the NZFFD coords (from NZMG to WGS84 lat/long)
dat_coord <- data.frame(x = dat4$east, y = dat4$north)
sp::coordinates(dat_coord) <- ~ x + y
proj4string <- "+proj=nzmg +lat_0=-41 +lon_0=173 +x_0=2510000 +y_0=6023150
+ellps=intl +datum=nzgd49 +units=m +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993
+nadgrids=nzgd2kgrid0005.gsb +no_defs" # NZMG49
sp::proj4string(dat_coord) <- sp::CRS(proj4string)
dat_coord <- sp::spTransform(dat_coord, sp::CRS("+init=epsg:4326")) #WGS84
dat_coord <- as.data.frame(dat_coord)
# reattch coords
dat4$wgs84_x <- dat_coord$x
dat4$wgs84_y <- dat_coord$y
# Subset Mudfish data ---------------------------------------------------------
mud <- c("Canterbury mudfish", "Burgundy mudfish",
"Brown mudfish", "Black mudfish")
fish_map <- dat4 %>%
filter(common_name %in% mud) %>%
filter(catch != "Chatham")
# Mapping ---------------------------------------------------------------------
# get a friendly NZ map
nzmap <- southernMaps::nzHigh
nzmap <- southernMaps::fortify_polygons(nzmap, proj = "wgs84")
# Plot all 4 species on one map
ggplot(nzmap, aes(x = long, y = lat)) +
geom_path(aes(group = group)) +
coord_map() +
geom_point(data = fish_map, aes(x = wgs84_x, y = wgs84_y, colour = common_name)) +
theme_minimal() +
labs(color = "Species")
library(nzffdr)
remove.packages("nzffdr")
library(nzffdr)
devtools::document()
devtools::check()
# function help files
?import_nzffd()
?clean_nzffd()
?fill_nzffd()
?add_nzffd()
file.exists("~/.ssh/id_rsa.pub")
dat <- import_nzffd(
catchment = "", river = "", location = "",
fish_method = "", species = "", starts = 2010, ends = 2019)
catchment <- ""
if (((catchment == "") || grepl("^\\d+\\%$", catchment) ||
grepl("^\\d{3}\\.\\d{3}$", catchment)) == FALSE) {
stop("arg: catchment must be 6-digit character string (e.g. \"752.638\")
or numbers followed by % for wildcard searches (e.g.\"752%\"), or left
blank to seach all (e.g. \"\")", call. = FALSE)
}
catchment <- ""
if (((catchment == "") || grepl("^\\d+\\%$", catchment) ||
grepl("^\\d{3}\\.\\d{3}$", catchment))) {
stop("arg: catchment must be 6-digit character string (e.g. \"752.638\")
or numbers followed by % for wildcard searches (e.g.\"752%\"), or left
blank to seach all (e.g. \"\")", call. = FALSE)
}
((catchment == "") || grepl("^\\d+\\%$", catchment) ||
grepl("^\\d{3}\\.\\d{3}$", catchment))
grepl("^\\d+\\%$", catchment)
grepl("^\\d{3}\\.\\d{3}$", catchment)
method_nzffd
